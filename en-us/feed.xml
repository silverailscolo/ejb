<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://silverailscolo.github.io/ejb/en-us/feed.xml" rel="self" type="application/atom+xml"/><link href="https://silverailscolo.github.io/ejb/en-us/" rel="alternate" type="text/html"/><updated>2024-08-06T13:54:26+00:00</updated><id>https://silverailscolo.github.io/ejb/feed.xml</id><title type="html">EJB’s site</title><entry xml:lang="nl"><title type="html">Bouw zelf een slimme Whisper Gold Line besturing</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/whisper-smart-fan/" rel="alternate" type="text/html" title="Bouw zelf een slimme Whisper Gold Line besturing"/><published>2024-08-03T00:00:00+00:00</published><updated>2024-08-03T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/whisper-smart-fan</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/whisper-smart-fan/"><![CDATA[<p>Voor een frisse lucht in onze slaapkamer hadden we een decentrale WTW-unit, maar die maakte te veel lawaai om bij in slaap te vallen…<br/> Omdat we toch graag wat frisser slapen, is WTW hier ook niet zo nuttig. Dus ik heb een lijn-ventilator gemonteerd die met een ESP32 automatisch harder gaat afzuigen als de CO<sub>2</sub> te hoog wordt. Dit is mijn oplossing:</p> <figure><img src="/ejb/assets/img/house/smart/whisper/whisper_complete.jpg" alt="De complete ventilator in gebruik" class="img-fluid"/><figcaption class="kleiner">De complete ventilator</figcaption></figure> <h3 id="benodigde-hardware">Benodigde hardware</h3> <ul> <li>Buisventilator Ø125mm traploos verstelbare snelheid EC-motor, bijv. de <a href="https://www.ventilatieshop.com/buisventilatoren/whisper-buisventilator/whisper-gold-line-buisventilator-diameter-100mm-125mm-ec-motor-wgle/">Whisper Gold Line EC</a>. Je hebt de 10V handregelaar niet nodig, maar vast wel wat stalen buizen en koppelstukken.</li> <li><a href="https://shop.m5stack.com/products/atom-lite-esp32-development-kit">M5 Stack Atom Lite</a>. Dit is een compacte 25x25mm SOC met een ingebouwde RGB-led en drukknop. Ik kocht hem <a href="https://www.tinytronics.nl/nl/development-boards/microcontroller-boards/met-wi-fi/m5stack-atom-lite-esp32-development-board">hier</a></li> <li>USB-A naar USB-C kabel</li> <li>Een <a href="https://www.tinytronics.nl/nl/schakelaars/mosfet's/irf520-breakout-module">IRF520 MOSFET breakout</a> om het PWM-signaal van de Atom te versterken naar 10V= voor de ventilator</li> <li><a href="https://www.home-assistant.io">HomeAssistant</a> met <a href="https://esphome.io/guides/getting_started_hassio">ESPHome Add-on</a> IDE om de code op de Atom te installeren en de gegevens te bekijken</li> <li>Automatiseringen op de Atom Lite (ESP32), ingesteld met ESPHome, die reageren op</li> <li>CO<sub>2</sub>-sensor met integratie in HomeAssistant, bijv. <a href="https://shop.netatmo.com/nl-nl/aircare/home-coach/homecoach">Netatmo Healthy Home Coach</a> (kan via HomeAssistant met de ook <a href="https://www.home-assistant.io/integrations/homekit">HomeKit Bridge</a> ook nog in Apple HomeKit verschijnen, maar andersom kan niet)</li> </ul> <h3 id="co2-meten">CO<sub>2</sub> meten</h3> <p>Plaats de CO<sub>2</sub> meter in de slaapkamer en installeer in HomeAssistant de <a href="https://www.home-assistant.io/integrations/homekit_controller">HomeKit Controller</a> integratie om de metingen in HomeAssistant te tonen.</p> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/ha_netamo_homekit.png" alt="Integratie in HomeAssistant" class="img-fluid"/><figcaption class="kleiner">Integratie in HomeAssistant</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/ha_co2_sensor.png" alt="CO2-meting in HomeAssistant" class="img-fluid"/><figcaption class="kleiner">CO<sub>2</sub>-meting in HomeAssistant</figcaption></figure> </div> </div> <h3 id="ventilator-aansluiten">Ventilator aansluiten</h3> <p>Monteer de ventilator, -kanalen en demper buiten je slaapkamer. Ik heb ze in een kast in een aanpalende logeerkamer ingebouwd, die ook wordt afgezogen.</p> <p>Naast de 230V contactdoos voor de Whisper Gold Line ventilator heb je een wcd voor de USB-adapter die de M5 Stack Atom voedt nodig.</p> <p>Bij de ventilator wordt een aansluitkastje geleverd, waarin zowel de 230V voeding als 4 besturingsdraadjes uitkomen:</p> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/whisper_wiring.jpg" alt="Whisper aansluitschema" class="img-fluid"/><figcaption class="kleiner">Whisper aansluitschema uit handleiding</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/whisper_wires.jpg" alt="Whisper aansluitingen" class="img-fluid"/><figcaption class="kleiner">Whisper aansluitingen</figcaption></figure> </div> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/Atom-Whisper-Connections.png" alt="Volledig aansluitschema" class="img-fluid"/><figcaption class="kleiner">Volledig aansluitschema</figcaption></figure> </div> <h3 id="m5-atom-lite-aansluiten">M5 Atom Lite aansluiten</h3> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/atom_lite_wires.jpg" alt="Connector achter de Atom Lite" class="img-fluid"/><figcaption class="kleiner">WhConnector achter de Atom Lite</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/atom-lite-installed.jpg" alt="Atom Lite ESP32 controller gemonteerd voor de kast" class="img-fluid"/><figcaption class="kleiner">Atom Lite ESP32 controller gemonteerd voor de kast</figcaption></figure> </div> </div> <p>Ik hab vanaf de ventilator 2x2 draadjes in een stuk netwerkkabel gebruikt om de Atom te voeden met 5V en de 2 contacten naar de fan aan te sluiten. Dat kan in 1 rij pinnetjes aan de achterzijde van de Atom, zie foto. GPIO25 (oranje) is de PWM-uitgang. GPIO21 is de toerenteller-puls vanaf de ventilator.</p> <p>Na installatie geeft de kleur van de Lite de CO<sub>2</sub>-waarde weer (groen &lt; 500, rood &gt; 800). De helderheid van de led geeft de snelheid van de ventilator aan: hoe sneller hoe feller.</p> <h3 id="code-voor-atom">Code voor Atom</h3> <p>Download de <a href="/ejb/en-us/assets/yaml/whisper/esphome_m5atomlite-whisper.yaml">yaml code</a> en installeer die op de M5Stack Atom Lite (ESP32) via de HomeAssistant ESPHome IDE. Als je de Atom Lite voor het eerst gebruikt, ga dan eerst in Chrome naar <a href="https://web.esphome.io/?dashboard_wizard">ESPhome Web</a>, sluit via de USB-kabel de Atom aan op je computer, klik op Connect en dan op je USB-poort.</p> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/esphome-connect.png" alt="In ESPhome Web select Connect" class="img-fluid"/><figcaption class="kleiner">In ESPhome Web select Connect</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/esphome-port.png" alt="Select the port on your PC" class="img-fluid"/><figcaption class="kleiner">Select the port on your PC</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/esphome-prepare.png" alt="Progress of initial install" class="img-fluid"/><figcaption class="kleiner">Progress of initial install</figcaption></figure> </div> </div> <p>De essentie van de ESP32 configuratie bestaat uit:</p> <p>Basis-instellingen:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>esphome:
  name: m5atomlite-whisper
  friendly_name: M5Atom Lite Whisper

globals:
  - id: speed_set_int
    type: int
    restore_value: yes
    initial_value: '4'
  - id: automatic_co2
    type: int
    restore_value: yes
    initial_value: '1'

esp32:
  board: m5stack-atom
  framework:
    type: arduino
</code></pre></div></div> <p>Een speed_fan object aanmaken:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fan:
  - platform: speed
    id: whisper_fan
    name: "Slaapkamer Ventilator"
    output: whisper_fan_pwm
    speed_count: 10
    on_turn_on:
      # publish set speed
      - sensor.template.publish:
          id: whisper_speed_step
          state: !lambda 'return id(whisper_fan).speed;'
    on_turn_off:
      # publish set speed
      - sensor.template.publish:
          id: whisper_speed_step
          state: 0
      # set brightness
      - light.turn_off:
          id: led
    on_speed_set:
      # publish set speed
      - sensor.template.publish:
          id: whisper_speed_step
          state: !lambda 'return id(whisper_fan).speed;'
      # set brightness
      - lambda: |-
          // adjust brightness for any speed change
          auto call = id(led).make_call();
          call.set_state(true); // turn the light on if it was off
          auto n = 0.05 * id(speed_set_int);
          call.set_brightness(n);
          call.perform();
</code></pre></div></div> <p>Een output aanmaken om de snelheid van de fan met PWM te sturen:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>output:
  - platform: ledc
    # Fan PWM
    # Connect MOS-SIG to GPIO25, MOS-GND to GND; Whisper yellow to MOS V-, black to OUT-GND, red to OUT+10V
    id: whisper_fan_pwm
    pin:
      number: GPIO25
      inverted: true # MOS V+ did not work, V- did, so inverted PIN
    frequency: 10000Hz # lower if it whines
</code></pre></div></div> <p>Een knop (switch) voor de automatische stand:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>switch:
  - platform: template
    id: automatic
    name: Automatische regeling
    lambda: |-
      if (id(automatic_co2) == 1){
        return true;
      } else {
        return false;
      }
    turn_on_action:
      then:
      - fan.turn_on:
          id: whisper_fan
      - lambda: |-
          id(automatic_co2) = 1;
          // next block to match thresholds in sensor.co2_measurement block above
          ESP_LOGD("ATOM", "Whisper Auto ON, CO2: %d", id(co2_measurement).state);
          if (id(co2_measurement).state &gt; 1300) {
            id(speed_set_int) = 8;
          } else if (id(co2_measurement).state &gt; 800.0){
            id(speed_set_int) = 7;
          } else if (id(co2_measurement).state &gt; 700.0){
            id(speed_set_int) = 6;
          } else if (id(co2_measurement).state &gt; 600.0){
            id(speed_set_int) = 5;
          } else if (id(co2_measurement).state &gt; 450.0){
            id(speed_set_int) = 4;
          } else if (id(co2_measurement).state &gt; 350.0){
            id(speed_set_int) = 3;
          } else {
            id(speed_set_int) = 0;
          }
          id(whisper_fan).speed = id(speed_set_int);
    turn_off_action:
      then:
      - lambda: |-
          id(automatic_co2) = 0;
</code></pre></div></div> <p>Een sensor om de gegevens van de CO<sub>2</sub>-sensor uit HomeAssistant naar de ESP32 kopiëren:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sensor:
  - platform: homeassistant
    id: co2_measurement # this is the ID for a new local sensor, and copies:
    entity_id: sensor.healthy_home_coach_netatmo_carbon_dioxide_sensor  # this points to the front end (Netatmo) entity
    unit_of_measurement: 'ppm'
    filters:
      - round: 0
    on_value_range: # next block to match thresholds in switch.automatic_co2 block below
      - above: 0
        below: 350.0
        then:
          - if:
              condition:
                lambda: return id(automatic_co2) == 1;
              then:
                fan.turn_off:
                  id: whisper_fan
          - light.turn_off:
              id: led
          #- logger.log: CO2 &lt; 350 ppm
      - above: 350.1
        below: 450.0
        then:
          - if:
              condition:
                lambda: return id(automatic_co2) == 1;
              then:
                fan.turn_on:
                  id: whisper_fan
                  speed: 3
          - light.turn_on:
              id: led
              red: 0
              green: 100%
              blue: 0
          #- logger.log: 350 &lt; CO2 &lt; 450 ppm
      # ETC.
      - above: 1300.1
        then:
          - if:
              condition:
                lambda: return id(automatic_co2) == 1;
              then:
                fan.turn_on:
                  id: whisper_fan
                  speed: 8
          - light.turn_on:
              id: led
              red: 100%
              green: 0%
              blue: 50%
          #- logger.log: WARNING CO2 &gt; 1300 ppm
</code></pre></div></div> <p>Als de ventilator op Automatisch staat, checkt deze code de snelheid van de ventilator bij elke nieuwe CO<sub>2</sub>-meting uit de slaapkamer en past ook de kleur van de LED aan (van groen = schoon naar bruin = vuil).</p> <p>Een sensor die als toerenteller informatie geeft over de werkelijke snelheid van de Whisper ventilator (3 pulsen per omwenteling, vandaar *0.33 filter):</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sensor:
  - platform: pulse_counter # -meter too many data points
    # toerenteller Whisper witte draad
    name: Toerental
    id: whisper_toerental
    pin:
      number: GPIO21
      # inverted: true
      mode:
        input: true
        pullup: true
    unit_of_measurement: 't/min'
    state_class: measurement
    device_class: speed
    internal_filter: 5us
    update_interval: 10s
    filters:
      - multiply: 0.33 # (3 ticks per revolution as per Whisper Gold manual)
      - round: 0
</code></pre></div></div> <h3 id="home-assistant-instellingen">Home Assistant instellingen</h3> <p>Voeg in HomeAssistant in de Code-editor modus van een nieuw Dashboard deze <a href="assets/yaml/whisper/homeassistant_whisper_dashboard.yaml">code</a> toe om een dashboard voor de bediening van je fan te maken.</p> <p>Pas evt. de code aan voor jouw situatie, bijv.</p> <ul> <li>De exacte gegevens van jouw CO<sub>2</sub>-sensor</li> <li>De namen van je speed_fan, ventilator-sensors en -switches</li> </ul> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/whisper_ha_dashboard.jpg" alt="HA Dashboard Whisper ventilator" class="img-fluid"/><figcaption class="kleiner">Dashboard Whisper ventilator in HomeAssistant</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/whisper/HA-whisper-speed-graph.png" alt="Snelheid van de ventilator reageert op CO2-meting" class="img-fluid"/><figcaption class="kleiner">Snelheid van de ventilator reageert op CO<sub>2</sub>-meting</figcaption></figure> </div> </div> <p>Veel gezonde slaap gewenst!</p>]]></content><author><name></name></author><category term="software"/><category term="hardware"/><category term="smart-home"/><summary type="html"><![CDATA[Voor een frisse lucht in onze slaapkamer hadden we een decentrale WTW-unit, maar die maakte te veel lawaai om bij in slaap te vallen… Omdat we toch graag wat frisser slapen, is WTW hier ook niet zo nuttig. Dus ik heb een lijn-ventilator gemonteerd die met een ESP32 automatisch harder gaat afzuigen als de CO2 te hoog wordt. Dit is mijn oplossing:]]></summary></entry><entry xml:lang="en-us"><title type="html">Build an AGA Cooker Display</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/smartovendisplay/" rel="alternate" type="text/html" title="Build an AGA Cooker Display"/><published>2024-04-25T00:00:00+00:00</published><updated>2024-04-25T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/smartovendisplay</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/smartovendisplay/"><![CDATA[<p>As you may have read <a href="/ejb/en-us/house/smart.html#oven">here</a>, I wanted to build a reminder/indication for our AGA kitchen stove. This was my solution.</p> <figure><img src="/ejb/assets/img/house/smart/aga/agadisplay_IMG9388.jpg" alt="The finished display in use" class="img-fluid"/><figcaption class="kleiner">The finished display</figcaption></figure> <h3 id="hardware-items-needed">Hardware items needed</h3> <ul> <li><a href="https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html">Raspberry Pico W</a></li> <li><a href="https://www.waveshare.com/wiki/Pico-OLED-1.3">Waveshare 1.3” Pico OLED</a> display</li> <li>USB-A to USB-C cable</li> <li><a href="https://thonny.org">Thonny IDE</a> for <a href="https://micropython.org">MicroPython</a> to program the picoW</li> <li><a href="https://www.home-assistant.io">HomeAssistant</a> providing energy use via <a href="https://mqtt.org">MQTT</a> messages</li> <li>Automations set up in HomeAssistant responding to</li> <li>Current sensing input for your stove to HomeAssistant, eg. <a href="https://www.myenergi.com/product/harvi/">myenergi harvi</a> (2 CT clamps minimum on 3 Phase install)</li> </ul> <h3 id="current-sensing">Current Sensing</h3> <p>Near the switch board or in another safely accessible location, mount 2-3 CT-clamps on the feeders to the AGA stove. I ordered compact myenergi clamps.</p> <div class="row"> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/aga/CT_clamps-IMG_9186.jpg" alt="CT clamps behind fuse box" class="img-fluid"/><figcaption class="kleiner">CT clamps behind fuse box</figcaption></figure> </div> <div class="col-sm"> <figure><img src="/ejb/assets/img/house/smart/aga/harvi_inside-IMG_9183.jpg" alt="connections inside harvi" class="img-fluid"/><figcaption class="kleiner">CT2/3 connections inside harvi</figcaption></figure> </div> </div> <p>I connected the CT clamp wires to the unused inputs of my harvi, which show up as sensors in the Home Assistant myenergi integration.</p> <h3 id="code">Code</h3> <p>Download the <a href="/ejb/en-us/assets/python/ovendisplay-main.py">micropython code</a> and load it onto the PicoW using the Thonny application.</p> <h3 id="home-assistant-set-up">Home Assistant set-up</h3> <p>In HomeAssistant, create input_number definitions in configuration.yaml;</p> <figure><img src="/ejb/assets/img/house/smart/aga/ha_ct2_inputnumber.png" alt="HA CT2 Input Settings Pane" class="img-fluid"/><figcaption class="kleiner">CT2 Input Settings Pane</figcaption></figure> <p>Add ON/OFF Automations for each element of your stove, for example to signal Baking Oven was turned ON:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alias: AGA Baking Oven ON
description: ""
trigger:
- platform: numeric_state
  entity_id:
  - sensor.ct2_actueel_vermogen
    above: 820
    below: 960
    condition: []
    action:
- service: input_boolean.turn_on
  data: {}
  target:
  entity_id: input_boolean.aga_baking_oven
  mode: single
</code></pre></div></div> <p>In HomeAssistant, add binary input_boolean (On/Off) sensors for each item on your stove, for example:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alias: AGA turns OFF CT2
description: ""
trigger:
- platform: numeric_state
  entity_id:
  - input_number.ct2_actueel
    below: 1
    for:
    hours: 0
    minutes: 1
    seconds: 0
- platform: numeric_state
  entity_id:
  - sensor.ct2_ct3
    below: 1
    for:
    hours: 0
    minutes: 1
    seconds: 0
    condition: []
    action:
- service: input_boolean.turn_off
  data: {}
  target:
  entity_id:
  - input_boolean.aga_grill
  - input_boolean.aga_baking_oven
  - input_boolean.aga_roasting_oven
  mode: single
</code></pre></div></div> <figure><img src="/ejb/assets/img/house/smart/aga/ha_bakingoven_input_setting.png" alt="HA Oven Input Setting Pane" class="img-fluid"/><figcaption class="kleiner">Input Oven Setting Panel</figcaption></figure> <p>Add MQTT topics in HomeAssistant configuration.yaml:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mqtt_statestream:
base_topic: homeassistant
publish_attributes: false
publish_timestamps: false
include:
  entities:
    - input_boolean.aga_warming_oven
    - input_boolean.aga_boiling_plate
    - input_boolean.aga_simmer_plate
    - input_boolean.aga_baking_oven
    - input_boolean.aga_roasting_oven
    - input_boolean.aga_grill
entity_globs:
  - input_boolean.aga_*

# MQTT subscribe to PicoW
mqtt:
sensor:
- name: "Timer A"
unique_id: "timer_a"
state_topic: "picow/timerA/running"
- name: "Timer B"
unique_id: "timer_b"
state_topic: "picow/timerB/running"
</code></pre></div></div> <p>More on MQTT for sensors from PicoW micropython <a href="https://github.com/agners/micropython-ha-mqtt-device">here</a></p> <p>Adapt for your use case, eg.</p> <ul> <li>MQTT messages format</li> <li>Connection names and trigger currents of your stove elements (look at sensor.ct2_ above)</li> </ul> <p>Because the <a href="https://www.myenergi.com/product/harvi/">myenergi harvi</a> is powered from the CT clamps, a bit more tweaking is required.</p> <p>To reset the current sensors to zero when no PV or AGA current is flowing through the clamps, I created a 2 minute timer that is reset every minute as a (non-zero) measurement from the myenergi server arrives in Home Assistant myenergi integration. When this timer eventually runs out, it means neither the PV panels nor the stove is consuming any power, and an automation sets <code class="language-plaintext highlighter-rouge">input_number.ct2_actueel</code> and <code class="language-plaintext highlighter-rouge">input_number.ct3_actueel</code> back to zero.</p> <p>If you need those details, open an <a href="https://github.com/silverailscolo/ejb/issues">Issue</a> on this site.</p>]]></content><author><name></name></author><category term="software"/><category term="hardware"/><category term="smart-home"/><summary type="html"><![CDATA[As you may have read here, I wanted to build a reminder/indication for our AGA kitchen stove. This was my solution.]]></summary></entry><entry xml:lang="en-us"><title type="html">Tidbits</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/tidbits/" rel="alternate" type="text/html" title="Tidbits"/><published>2024-04-22T00:00:00+00:00</published><updated>2024-04-22T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/tidbits</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/tidbits/"><![CDATA[<ul> <li><a href="https://fluithaasbio-nl.webnode.nl/">Fluithaas</a> by our youngest (2014)</li> <li><a href="https://www.ebroerse.nl/Verborgen_sleutels/Home.html">Verborgen Sleutels</a> online game, another idea from our youngest</li> <li><a href="https://www.chaosofdelight.org/">A Chaos of Delight</a> delight over small critters at the base of life</li> </ul>]]></content><author><name></name></author><category term="education"/><category term="nature"/><summary type="html"><![CDATA[Fluithaas by our youngest (2014) Verborgen Sleutels online game, another idea from our youngest A Chaos of Delight delight over small critters at the base of life]]></summary></entry><entry xml:lang="en-us"><title type="html">Reading EXIF tags in Jekyll with exiftools</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/reading-exif-in-jekyll/" rel="alternate" type="text/html" title="Reading EXIF tags in Jekyll with exiftools"/><published>2024-04-19T00:00:00+00:00</published><updated>2024-04-19T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/reading-exif-in-jekyll</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/reading-exif-in-jekyll/"><![CDATA[<p>As I am migrating this site to Jekyll / GitHub pages, I am integrating data that was separate (and under the hood) up to now. That requires a bit of scripting, with minimal re-entry of stuff.</p> <p>An important example are my pictures, that I once managed in <a href="https://www.extensis.com/portfolio">Extensis Portfolio</a>, and later as separate files on a local HD.</p> <p>It would be noce to let you read a caption with each photo that I add to the site, and as I remembered that I once put keywords and captions for many images into the image files as EXIF tags, I now try to read those fields from the images and apply them as captions in the lightGallery slide shows, like <a href="/ejb/en-us/assets/art_gallery/sketches/">here</a>.</p> <p>A lot of (old) tools are available to extract the EXIF tags, but Portfolio used other fields… After EXIF came IPTC tags, used for GPS lat/long data, title etc. IPTC is sparsely supported bij ruby tools. And as it happens, my image captions are in so called XMP tags, for which just a few tools provide support.</p> <p>To make things more complicated, modern image management tools like Adobe <a href="https://www.adobe.com/nl/products/photoshop-lightroom.html">Lightroom</a> and <a href="https://www.digikam.org/">DigiKam</a> allow you to enter labels in XMP and copy those strings to EXIF respectively. (although XMP allows for longer strings, and EXIF only allows for printable ASCII character, so where do the ü and Ø go in the process?)</p> <p>Today I discovered a tool called <a href="https://exiftool.org/">exiftool</a>, that finally will give me access to my cherished image captions. From inside Jekyll you can use it through the <a href="https://rubygems.org/gems/exiftool/versions/1.2.5">exiftool gem</a>. After a bit of fiddling, I am now able to display all text fields stored in a picture file, and automatically copy it to the html code for one of my web galleries. Exiftool Docs warn that the three tag types overlap, unless you ask for <code class="language-plaintext highlighter-rouge">-all</code> tags. If we focus on the caption and the copyright fields, these are the specific tag names to fetch:</p> <table> <thead> <tr> <th>Type</th> <th>Caption field name</th> <th>Copyright field name</th> <th>Used</th> </tr> </thead> <tbody> <tr> <td>EXIF</td> <td>user_comment</td> <td>copyright</td> <td> </td> </tr> <tr> <td>IPTC</td> <td>“caption-abstract”</td> <td>copyright_notice</td> <td>&lt;–</td> </tr> <tr> <td>XMP</td> <td>description</td> <td>rights</td> <td> </td> </tr> </tbody> </table> <p>In Ruby code that makes for:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>require 'exiftool'
...
exiftoolbatch = Exiftool.new(Dir["#{Dir.pwd + '/' + dir}/*.*"]) # we are in original_dir
...
exif =  exiftoolbatch.result_for(fullpath)
...
capt = exif[:"caption-abstract"]
copy = exif[:copyright]
</code></pre></div></div>]]></content><author><name></name></author><category term="software"/><category term="computers"/><summary type="html"><![CDATA[As I am migrating this site to Jekyll / GitHub pages, I am integrating data that was separate (and under the hood) up to now. That requires a bit of scripting, with minimal re-entry of stuff.]]></summary></entry><entry xml:lang="en-us"><title type="html">Favorite titles</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/bookfavorites/" rel="alternate" type="text/html" title="Favorite titles"/><published>2024-04-11T00:00:00+00:00</published><updated>2024-04-11T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/bookfavorites</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/bookfavorites/"><![CDATA[ <p>Titles of some of my favorite books:</p> <figure><img src="/ejb/assets/img/blog/20240411_favbooks.jpg" alt="The books" class="img-fluid"/></figure> <ul> <li><em><a href="https://legacy.iftf.org/smartcities/">Smart Cities</a></em> by Anthony Townsend, Norton 2014.</li> <li><em><a href="https://archive.org/details/architectureofwe00banh/page/n2/mode/1up">The Architecture of the Well-tempered Environment</a></em>, by Reyner Banham 06/2014</li> <li><em><a href="https://en.m.wikipedia.org/wiki/The_Oxford_Book_of_Modern_Science_Writing">The Oxford Book of Modern Science Writing</a></em>, by Richard Dawkins</li> <li><em><a href="">The Age of Wonder</a></em>, by Richard Holmes 02/2010</li> <li><em><a href="https://en.m.wikipedia.org/wiki/Dark_Age_Ahead">Dark age ahead</a></em>, by Jane Jacobs 01/2008</li> <li><em><a href="https://psycnet.apa.org/record/2001-00419-000">The ape and the sushi master: Cultural reflections of a primatologist</a></em>, by Frans de Waal 11/2007</li> <li><em><a href="https://www.geertmak.nl/en/books/in-europa-in-europe/">In Europe</a></em>, by Geert Mak: history of our continent 08-10/2004</li> </ul> <h2 id="find-books-about-a-city">Find books about a city</h2> <ul> <li><a href="https://readingthecity.com/">Reading the City</a></li> </ul>]]></content><author><name></name></author><category term="books"/><category term="dawkins"/><summary type="html"><![CDATA[&lt;!– SPDX-FileCopyrightText: 2024 EJ Broerse]]></summary></entry><entry xml:lang="en-us"><title type="html">Open Source</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/opensourcelinks/" rel="alternate" type="text/html" title="Open Source"/><published>2024-04-11T00:00:00+00:00</published><updated>2024-04-11T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/opensourcelinks</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/opensourcelinks/"><![CDATA[<p>A couple of projects that I support and contribute to:</p> <ul> <li><a href="https://jmri.sourceforge.net/">JMRI</a>, Java Model Railroad Interface, to control and run a DCC model railroad</li> <li><a href="https://www.freecad.org">FreeCAD</a> open source 3D BIM, discovering how to model</li> </ul>]]></content><author><name></name></author><category term="software"/><category term="macos"/><category term="open-source"/><summary type="html"><![CDATA[A couple of projects that I support and contribute to:]]></summary></entry><entry xml:lang="en-us"><title type="html">Goodbye Hypersite</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/goodbye-hypersite/" rel="alternate" type="text/html" title="Goodbye Hypersite"/><published>2024-03-22T00:00:00+00:00</published><updated>2024-03-22T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/goodbye-hypersite</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/goodbye-hypersite/"><![CDATA[<p>To archive an application that I created and ported over the years, here is the final readme of Hypersite.</p> <h1>What is HyperSite and how does it work?</h1> <p>HyperSite is a stack that helps you maintain your own website pages. Finding a provider and creating a few html pages is no big deal. But it does take effort to ‘just’ update the content, including the date in the footer etc.</p> <p>But if you fail to update your site regularly, visitors will look elsewhere. Now that would be a shame, as this HyperCard stack is not expensive and a rather simple CMS to manage your site contents.<br/> Quiclky add a few lines, add a new background image to a page (remember that?) and preview the changes in your local browser before uploading it with a single click; Done!<br/> (See <a href="#beperkingen">Limitations</a> as for what can <em>not</em> do).</p> <div class="normal-nc"> <a href="#principe">Principle</a> | <a href="#instructies">Instructions</a> | <a href="#historie">History</a> | <a href="#credits">Credits</a> </div> <h2 id="principe">Principle</h2> <p>What is HyperSite? With this stack you can - within a fixed layout consisting of a 2-column table and a menu with links to the other pages - edit, format and save the content of each page as an html file. Take a look at a small example.</p> <figure><img src="/ejb/assets/img/blog/HyperSite-p0.gif" alt="HyperSite start screen" class="img-fluid"/><figcaption class="kleiner">HyperSite start screen</figcaption></figure> <p>For each page of your web-site there is a separate card, on which you can enter your own information in 4 text fields. As far as you can influence the formatting within the standard HTML 3.2, a number of tools are available via a series of buttons at the bottom left of the screen. There are also buttons to create ‘links’ and ‘anchors’.</p> <p>General information that is the same for each page can be entered in the ‘General settings’ card. If you then click on the ‘Create HTML’ button, a complete HTML file will be created on the hard disk from all that data. Via the ‘Upload…” you can then send those files to your provider. Click on the ‘Start’ button at the top right of this screen to continue…</p> <p>This stack uses other programs, which need to be installed on your computer:</p> <ul> <li>a web browser, like Safari or Firefox;</li> <li>an FTP-program, like Transmit by <a href="https://www.panic.com">Panic</a>;</li> <li>a graphics program to create or adapt images for the web, like Macromedia Xres (remember that one?), Photoshop or Graphic Converter.</li> </ul> <h2 id="instructies">Instructions</h2> <figure><img src="/ejb/assets/img/blog/HyperSite-p1.gif" alt="HyperSite Algemeen scherm" class="img-fluid"/><figcaption class="kleiner">HyperSite Algemeen scherm</figcaption></figure> <h3 id="1-click-the-start-button">1. Click the “Start” button</h3> <p>Fill in at least the following information:</p> <ul> <li>a name for each page of your site, which will then appear as TABs at the top (use only lowercase letters and no spaces);</li> <li>A "local path", i.e. the place on your hard drive where all files associated with your site are (temporarily) stored. Because of the way HyperSite works, there should be a second folder called "Images" in this folder. This is where you save all the images, so that the root folder remains well organized (thanks to Claris HomePage);</li> <li>your E-mail address;</li> <li>your internet browser (use a dialog box to point out where it is located on your computer);</li> <li>a Fetch bookmark, which connects to your place on the server;</li> <li>an Applescript file that starts the Internet connection with your ISP, e.g. the "PPP start" script in the "AppleScript Tools" folder.</li> </ul> <p>Not mandatory:</p> <ul> <li>the name of a.GIF image that appears as a title on all pages, e.g. your logo;</li> <li>The name of a.GIF image that comes as a 'bullet' for each of the 4 text blocks.</li> </ul> <h3 id="2-continue-by-clicking-on-the-first-tab-slip-at-the-top-left">2. Continue by clicking on the first tab slip at the top left</h3> <p>Fill in the Name and Title for this page, and possibly. A background image or color. For each page, type the information you want to show in text boxes 1 through 4. A field can also be left empty.<br/> Minimal HTML knowledge: After each line insert a line break &lt;br&gt; and around paragraphs insert &lt;p&gt;…&lt;/p&gt;, otherwise all text will be one block.</p> <h3 id="3-assign-extra-markup">3. Assign extra markup</h3> <p>Select a text fragment with the mouse and click on one of the ‘buttons’ in the ‘Toolbox’ at the bottom left. For details refer to the <a href="#toolbox">Toolbox</a> section.</p> <h3 id="4-special-characters">4. Special characters</h3> <p>If there are ‘special’ characters in your text, for example “ü” and “é”, select them and click on the “ASCI to ISO” button to make sure that these characters appear clearly for everyone to see. If you click on this button without making a selection, all the text will be checked, but it will take some time.</p> <h3 id="5-when-youre-done-with-a-page">5. When you’re done with a page</h3> <p>Click on the “Create HTML” button. From all the information in the stack, an HTML file is created, the standard language of the world wide web. A text message will appear with the name of the file, which is the same as the name of your page + the extension “.html”. To export all pages as HTML files at once, hold down the Option key while clicking the “Create HTML” button.</p> <h3 id="6-preview">6. Preview</h3> <p>After the page(s) in question has been saved, you can choose on the screen whether or not to view the page locally in your web browser, previously filled in on the ‘General’ card. There must be enough free memory to open the browser.</p> <h3 id="7-upload">7. Upload</h3> <p>If everything is OK, the last step is to “upload” your page + associated images to your provider, i.e. copy them from your hard drive to your piece of your provider’s internet server. To do this, you usually use a separate FTP program, such as Transmit or Fetch. Transmit v 1.6 - a very nice program - can be found at <a href="https://www.panic.com">https://www.panic.com</a>.</p> <figure><img src="/ejb/assets/img/blog/HyperSite-p3.gif" alt="HyperSite input screen example" class="img-fluid"/><figcaption class="kleiner">HyperSite input screen example</figcaption></figure> <h4><a id="toolbox">The Toolbox</a></h4> <p>The HyperSite Toolbox consists of a number of buttons and pop-up menus that are located in the rectangle at the bottom left of each card.<br/> On the left side are all formatting functions, e.g. to make text bold or italicized. You can also specify the size of text and the color. To do this, you always have to select a text section first, otherwise you will only hear a warning sound.</p> <p>On the right are buttons to apply hyperlinks. A hyperlink is text that you can click on to jump somewhere else, e.g. a place elsewhere on your site (“anchor”, see below) or a completely different web-site (URL).<br/> A link consists of 2 parts, i.e. the underlined word, which appears on the screen, and the real goal, often in the form of a URL address, e.g. “https://www.apple.com” (= Apple). If you select a piece of text before clicking on the button, that piece will be used as underlined text, and all you have to do is indicate the goal in the dialog box.</p> <p>To mark a spot on one of your own pages as a target, insert an anchor, which consists of a special “tag” with a short name, which is not shown in a browser. All the anchors you have added to your stack up to that point will appear in a menu when you click on the anchor button. You can insert them as a hyperlink somewhere else.</p> <p>Put the insertion point in the right place and click on the button with the face to insert a certain type of image on your page. You can choose from 3 types:</p> <ol> <li>GIF and JPEG files can be displayed directly in any graphical browser;</li> <li>QuickTime are videos that a person can only watch if he/she has loaded Apple's QuickTime plugin;</li> <li>Shockwave are animations (e.g. Macromedia Flash and Director), which also require a plug-in in Netscape and ActiveX and JAVA technology in Internet Explorer.</li> </ol> <h4><a id="beperkingen">Constraints</a></h4> <p>The following items are not included in HyperSite:</p> <ul> <li>edit images and convert them to.GIF format (use Xres or the like);</li> <li>WYSIWYG formatting without seeing all tags (but preview via browser);</li> <li>apply external links via pop-up menu (use cut &amp; paste);</li> <li>a graphical overview of all pages and links (which is nice);</li> </ul> <p>Features I hope to add:</p> <ul> <li>alignment options (a working menu)</li> <li>(partial) check of all links (for now, use <a href="http://validator.w3.org/checklink">W3C Checklink</a> [tested 2/2/2010].</li> </ul> <h2 id="historie">History</h2> <h4>Use case</h4> <p>As I tried various HTML editors, I realized that I would be better off creating a simple and limited program with HyperCard for my specific needs. Within 1 consistent layout, I can focus on the content, while this stack handles all the side issues: navigation links to the other pages of my site, changing the date of last modification, giving all pages a different color or bullet in 1 go, etc. At the same time, I learned a bit more about HTML 3.2, XHTML and even HTML5…</p> <p>So this is what it has become, instead of about 4 pages for myself, already more than 6, and a lot more options than I had thought of initially.</p> <h4>Versions</h4> <dl> <dt>v 0.6 (March 1998)</dt> <dd>slowly built up using sample output from a commercial HTML editor.</dd> <dt>v 0.7 (May ‘98)</dt> <dd>finally does what I wanted, but wasn’t without bugs.</dd> <dt>v 0.8 (July 1998)</dt> <dd>some improvements (bug in tag fixed, speed ASCII conversion, correctly working tab strips at the top of the screen) and some additional wishes based on my own experience with the program (convert all pages in 1 click + option key, create tables within a field).</dd> <dt>v 1.0 (October 1998)</dt> <dd>contains extra options, e.g. whether or not to show the menu at the top left (for a different layout on the 1st page of a Site), to show the fixed image + header at the top right (ditto). Furthermore, some additional tools, o.a. HTML comment. Also fixed some minor bugs and strict HTML rules.</dd> <dt>V 1.1 and 1.2 (May-June ‘99)</dt> <dd>contains gradual improvements, e.g. to store parts of the site in subfolders - e.g. “docs:” - and still create all ‘links’ correctly.</dd> <dt>v 1.3 (Aug. ‘99)</dt> <dd>adds the ability to use JavaScript to use JavaScript ‘roll over’ effects to light up a navigation menu under your mouse (“hilite”). That’s now standard on the web, that’s why. For fast sites, you can always turn it off on the ‘General’ page. Also new is the ability to divide a part of the site into folders, completing the references to general interface and menu links via the “base URL” field. Furthermore, support for the “Language” Meta-Tag via a pop-up menu on the card “General” and a central Style Sheet (called “hyperstyle.css”) on the same map to control all formatting in 1 place using “Cascading Style Sheets” from HTML 4.0. For more info, see a good book on this subject. Also, the Tag for including Macromedia Flash images has been adjusted according to the latest information. DTD version in header: ‘HTML 4.0 Transitional’.</dd> <dt>v 1.5 (August 2000)</dt> <dd>Adds the ability to customize all backgrounds at once. Also added some extra tags to the toolbox: DIV and JS = JavaScript.</dd> <dt>v 1.6 (April 2001)</dt> <dd>Resolves some errors in the use of graphical (.GIF) buttons, so that unnecessary error messages do not occur. Also insert bottom cabinet HTML tags according to XHTML 1.0 specification, e.g. &lt;br /&gt;. The pretection of the first 2 screens has also been improved; you can only get there if you explicitly click on the <strong>?</strong> or <strong>General</strong> button.</dd> <dt>v 1.8</dt> <dd>complete port of Apple HyperCard stack to LiveCode.</dd> <dt>v 1.9 van 2018-2023</dt> <dd>HTML5 correct, including a responsive layout and w3 CSS styles.</dd> </dl> <figure><img src="/ejb/assets/img/blog/RevHyperSite21.png" alt="Revolution HyperSite screen" class="img-fluid"/><figcaption class="kleiner">Revolution HyperSite screen</figcaption></figure> <h2 id="credits">Credits</h2> <p>This stack is shareware. Support the development of these helpful programs by paying your shareware fee. Please pay Euro 25,- next time you see me.</p> <p>All programming © E.J. Broerse 04/1998 - 07/1998 - 09/1999 - 03/2000 - 04/2001 - 11/2002 - 02-2023 except <i>PopUpMenu XCMD</i> © Individual Software, Inc. 1988.</p>]]></content><author><name></name></author><category term="software"/><category term="macintosh"/><category term="hypercard"/><summary type="html"><![CDATA[To archive an application that I created and ported over the years, here is the final readme of Hypersite.]]></summary></entry><entry xml:lang="en-us"><title type="html">Tag cloud of all posts</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2024/tag-cloud/" rel="alternate" type="text/html" title="Tag cloud of all posts"/><published>2024-03-19T00:00:00+00:00</published><updated>2024-03-19T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2024/tag-cloud</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2024/tag-cloud/"><![CDATA[ <div id="cloud"> <div class="site-tag"> <a href="../../tag/dcc/" style="font-size: 110%"> DCC (1) </a> </div> <div class="site-tag"> <a href="../../tag/nibe/" style="font-size: 110%"> NIBE (1) </a> </div> <div class="site-tag"> <a href="../../tag/art/" style="font-size: 110%"> art (1) </a> </div> <div class="site-tag"> <a href="../../tag/blogging/" style="font-size: 140%"> blogging (2) </a> </div> <div class="site-tag"> <a href="../../tag/boat/" style="font-size: 110%"> boat (1) </a> </div> <div class="site-tag"> <a href="../../tag/climate/" style="font-size: 110%"> climate (1) </a> </div> <div class="site-tag"> <a href="../../tag/colorado/" style="font-size: 170%"> colorado (3) </a> </div> <div class="site-tag"> <a href="../../tag/computers/" style="font-size: 110%"> computers (1) </a> </div> <div class="site-tag"> <a href="../../tag/dawkins/" style="font-size: 110%"> dawkins (1) </a> </div> <div class="site-tag"> <a href="../../tag/electronics/" style="font-size: 110%"> electronics (1) </a> </div> <div class="site-tag"> <a href="../../tag/freight/" style="font-size: 110%"> freight (1) </a> </div> <div class="site-tag"> <a href="../../tag/house/" style="font-size: 110%"> house (1) </a> </div> <div class="site-tag"> <a href="../../tag/hypercard/" style="font-size: 110%"> hypercard (1) </a> </div> <div class="site-tag"> <a href="../../tag/industry/" style="font-size: 110%"> industry (1) </a> </div> <div class="site-tag"> <a href="../../tag/java/" style="font-size: 110%"> java (1) </a> </div> <div class="site-tag"> <a href="../../tag/jmri/" style="font-size: 140%"> jmri (2) </a> </div> <div class="site-tag"> <a href="../../tag/kit/" style="font-size: 140%"> kit (2) </a> </div> <div class="site-tag"> <a href="../../tag/language/" style="font-size: 140%"> language (2) </a> </div> <div class="site-tag"> <a href="../../tag/maatschappij/" style="font-size: 110%"> maatschappij (1) </a> </div> <div class="site-tag"> <a href="../../tag/macintosh/" style="font-size: 110%"> macintosh (1) </a> </div> <div class="site-tag"> <a href="../../tag/macos/" style="font-size: 110%"> macos (1) </a> </div> <div class="site-tag"> <a href="../../tag/model/" style="font-size: 110%"> model (1) </a> </div> <div class="site-tag"> <a href="../../tag/myenergi/" style="font-size: 110%"> myenergi (1) </a> </div> <div class="site-tag"> <a href="../../tag/n-scale/" style="font-size: 170%"> n scale (3) </a> </div> <div class="site-tag"> <a href="../../tag/n-schaal/" style="font-size: 110%"> n schaal (1) </a> </div> <div class="site-tag"> <a href="../../tag/nobel/" style="font-size: 110%"> nobel (1) </a> </div> <div class="site-tag"> <a href="../../tag/open-source/" style="font-size: 110%"> open source (1) </a> </div> <div class="site-tag"> <a href="../../tag/osx/" style="font-size: 110%"> osx (1) </a> </div> <div class="site-tag"> <a href="../../tag/scratchbuilt/" style="font-size: 110%"> scratchbuilt (1) </a> </div> <div class="site-tag"> <a href="../../tag/silverton/" style="font-size: 140%"> silverton (2) </a> </div> <div class="site-tag"> <a href="../../tag/smart-home/" style="font-size: 140%"> smart home (2) </a> </div> <div class="site-tag"> <a href="../../tag/taal/" style="font-size: 110%"> taal (1) </a> </div> <div class="site-tag"> <a href="../../tag/todo/" style="font-size: 110%"> todo (1) </a> </div> <div class="site-tag"> <a href="../../tag/trains/" style="font-size: 110%"> trains (1) </a> </div> <div class="site-tag"> <a href="../../tag/urban-design/" style="font-size: 110%"> urban design (1) </a> </div> <div class="site-tag"> <a href="../../tag/usa/" style="font-size: 110%"> usa (1) </a> </div> <div class="site-tag"> <a href="../../tag/zappi/" style="font-size: 110%"> zappi (1) </a> </div> </div> <script>var $grid=$("#cloud");$grid.isotope({percentPosition:!0,itemSelector:".site-tag",layoutMode:"masonry",gutter:5});</script> <p>Here is a <a href="/ejb/en-us/blog/tags.html">clickable list of all tags</a>.</p>]]></content><author><name></name></author><category term="general"/><category term="language"/><category term="blogging"/><summary type="html"><![CDATA[Live list of tags used in my posts]]></summary></entry><entry xml:lang="en-us"><title type="html">Home Automation</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2023/home-automation/" rel="alternate" type="text/html" title="Home Automation"/><published>2023-10-17T00:00:00+00:00</published><updated>2023-10-17T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2023/home-automation</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2023/home-automation/"><![CDATA[<p>A collection of software and APIs to control our Zappi EV charger, NIBE heat pump and SolarEdge PV.</p> <ul> <li> <p>Myenergi (Zappi) API: <a href="https://myenergi.info/api-acronyms-t3154.html">https://myenergi.info/api-acronyms-t3154.html</a></p> </li> <li> <p>Zappi Forum on API: <a href="https://myenergi.info/extracting-energy-data-t7445-s90.html">https://myenergi.info/extracting-energy-data-t7445-s90.html</a></p> </li> <li> <p>pymyenergy Python3 code:</p> <ul> <li> <p><a href="https://github.com/twonk/MyEnergi-App-Api">https://github.com/twonk/MyEnergi-App-Api</a></p> </li> <li> <p><a href="https://github.com/ashleypittman/mec">https://github.com/ashleypittman/mec</a></p> </li> </ul> </li> <li> <p>Home Assistant: <a href="https://www.home-assistant.io/installation/macos">https://www.home-assistant.io/installation/macos</a></p> </li> <li> <p>NIBE Uplink API: <a href="https://github.com/elupus/hass_nibe">https://github.com/elupus/hass_nibe</a></p> </li> <li> <p>Current Sensing with Raspberry Pi: <a href="https://www.instructables.com/Current-Monitoring-With-Raspberry-Pi/">https://www.instructables.com/Current-Monitoring-With-Raspberry-Pi/</a></p> </li> <li> <p>Oracle VirtualBox (to run Home Assistant OS on macOS): <a href="https://www.virtualbox.org/wiki/End-user_documentation">https://www.virtualbox.org/wiki/End-user_documentation</a></p> </li> </ul>]]></content><author><name></name></author><category term="smart home"/><category term="myenergi"/><category term="zappi"/><category term="NIBE"/><summary type="html"><![CDATA[A collection of software and APIs to control our Zappi EV charger, NIBE heat pump and SolarEdge PV.]]></summary></entry><entry xml:lang="en-us"><title type="html">IPCC Last Warning</title><link href="https://silverailscolo.github.io/ejb/en-us/blog/2023/ipcc/" rel="alternate" type="text/html" title="IPCC Last Warning"/><published>2023-04-04T00:00:00+00:00</published><updated>2023-04-04T00:00:00+00:00</updated><id>https://silverailscolo.github.io/ejb/blog/2023/ipcc</id><content type="html" xml:base="https://silverailscolo.github.io/ejb/blog/2023/ipcc/"><![CDATA[<p>This graph from the IPCC Synthesis Report looks serious:</p> <figure><img src="/ejb/assets/img/blog/IPCC_2023_opwarming.jpg" alt="IPCC Synthesis Report 2023 graph"/> <figcaption class="kleiner">IPCC Synthesis Report 2023 graph (<a prefix="dct: https://purl.org/dc/terms/" href="https://purl.org/dc/dcmitype/Image" property="dct:title" rel="dct:type">still image</a> &copy;<a prefix="cc: https://creativecommons.org/ns#" href="https://www.ipcc.ch/report/sixth-assessment-report-cycle/" property="cc:attributionName" rel="cc:attributionURL">IPCC</a> under <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA</a>)</figcaption> </figure>]]></content><author><name></name></author><category term="climate"/><summary type="html"><![CDATA[This graph from the IPCC Synthesis Report looks serious:]]></summary></entry></feed>